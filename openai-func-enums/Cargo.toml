[package]
name = "openai-func-enums"
version = "0.3.0"
authors = ["Frank Fralick <frankfralick@gmail.com>"]
keywords = ["openai", "async-openai", "ai", "clap"]
description = "A companion crate for async-openai to ease the composition of function calls by leveraging Rust's type system and enums."
edition = "2021"
license = "MIT"
repository = "https://github.com/frankfralick/openai-func-enums"
homepage = "https://github.com/frankfralick/openai-func-enums"
readme = "README.md"
categories = ["api-bindings", "command-line-interface"]


[dependencies]
async-openai = "0.18.2"
async-trait = "0.1.72"
openai-func-enums-macros = { path = "../openai-func-enums-macros", version = "0.3.0"}
openai-func-embeddings = { path = "../openai-func-embeddings", version = "0.3.0"}
rkyv = { version = "0.7.44", features = ["validation"] }
serde_json = "1.0.96"
tokio = { version = "1.25.0", features = ["sync"] }

[features]
compile_embeddings_all = ["openai-func-enums-macros/compile_embeddings_all"]
compile_embeddings_update = ["openai-func-enums-macros/compile_embeddings_update"]
